package html

import (
	"gitlab.com/sacules/chartsy/internal/models"
	"gitlab.com/sacules/chartsy/ui/html/components/icon"
	"gitlab.com/sacules/chartsy/ui/html/components/input"
)

templ Header(currentChart *models.Chart) {
	<header
		id="header"
		class="bg-slate-900 px-4 flex justify-between text-slate-50 border-b border-slate-700 items-center md:col-span-full"
	>
		<figure class="hidden md:flex gap-2 items-center">
			<img class="w-6 h-6" src="/assets/img/favicon-32x32.png" alt="Chartsy logo" />
			<figcaption>Chartsy</figcaption>
		</figure>
		<div
			class={"flex items-center text-center hover:bg-slate-800 h-3/4", templ.KV("visible", currentChart != nil), templ.KV("invisible", currentChart == nil)}
		>
			if currentChart != nil {
				<p
					class="px-4 chart-title"
				>
					{currentChart.Name}
					<script>
						me().on("click", ev => {
							me(".chart-title-input").toggleClass("hidden").focus()
							me(ev).toggleClass("hidden")
						})
						me().on("chart:title", ev => me(ev).textContent = ev.detail.value)
					</script>
				</p>
				@input.Text(input.InputTextProps{
					Id: "chart-title",
					Class: "hidden chart-title-input text-center settings",
					Name: "name",
					DefaultValue: currentChart.Name,
					Autocomplete: "off",
					HS: `on keydown[key == 'Enter']
							send chart:title(value: target.value) to <.chart-title />
							toggle .hidden on <.chart-title-input />
						    toggle .hidden on the previous <p />`,
				})
			}
		</div>
		<button
			_="on downloadend
				   set @aria-disabled to 'false'
			   on click
				   set @aria-disabled to 'true'"
			id="download-button"
			type="button"
			class={"h-6 w-6 aria-disabled:animate-pulse", templ.KV("visible", currentChart != nil), templ.KV("invisible", currentChart == nil)}
		>
			@icon.Download()
		</button>
	</header>
}
